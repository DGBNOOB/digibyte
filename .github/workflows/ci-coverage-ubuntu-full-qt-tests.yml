name: 'Build & Check: Ubuntu Full QT & Tests'

on:
  push:
  pull_request:
    branches: [ develop, master ]

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache APT Packages
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt
            /var/lib/apt/lists
          key: v1-${{ runner.os }}-apt-${{ hashFiles('**/ci-coverage-ubuntu-full-qt-tests.yml') }}
          restore-keys: |
            v1-${{ runner.os }}-apt-
            v1-${{ runner.os }}-

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pip3
          key: v1-${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            v1-${{ runner.os }}-pip-
            v1-${{ runner.os }}-

      - name: Install Basic Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool autotools-dev automake pkg-config python3 \
          libssl-dev bsdmainutils libevent-dev \
          libboost-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev \
          libsqlite3-dev \
          libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools \
          libqrencode-dev

      - name: Install Python Packages
        run: |
          pip3 install pypandoc
          pip3 install digibyte_scrypt

      - name: Install BerkleyDB
        run: ./contrib/install_db4.sh `pwd` --enable-cxx

      - name: Cache depends build
        uses: actions/cache@v3
        with:
          path: |
            depends/built
            depends/sdk-sources
            depends/x86_64-linux-gnu
          key: v1-${{ runner.os }}-depends-${{ hashFiles('depends/Makefile') }}
          restore-keys: |
            v1-${{ runner.os }}-depends-

      - name: Build Dependencies
        run: |
          cd depends
          make -j3 HOST=x86_64-linux-gnu
          cd ..

  build:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Auto Generate
        run: ./autogen.sh

      - name: Configure
        run: CONFIG_SITE=$PWD/depends/x86_64-linux-gnu/share/config.site ./configure --with-bdb --with-sqlite --with-gui=yes

      - name: Make
        run: make -j3

      - name: Make Check
        run: make check -j3

      - name: Upload Test Suite Log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-suite-log
          path: /src/test-suite.log